//比大小小游戏
package chapter4;
import java.awt.*;
import java.util.Random;
import javax.swing.*;

public class Gui {
	public static int num=0;
	private static void createAndShowGUI() {

		//创建一个JFrame窗口
		JFrame f=new JFrame("猜数字");
		f.setLayout(new BorderLayout());
		f.setSize(800, 400);
		f.setLocation(300,200);
		f.setVisible(true);
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		//创建一个JTextArea文本域，用来显示多行聊天信息
		JTextArea showArea =new JTextArea(18,34);
		JScrollPane scrollPane =new JScrollPane(showArea);
		showArea.setEditable(false);

		//创建一个JTextField文本框，用来输入猜测数字
		JTextField inputField=new JTextField(20);
		JButton btn1=new JButton("试试");
		JButton btn2=new JButton("看答案");
		JButton btn3=new JButton("重新开始");
		JButton btn4=new JButton("退出程序");

		//创建一个JPanel面板组件
		JPanel panel=new JPanel();
		JLabel label=new JLabel("猜猜这个数字    范围0-99");
		panel.add(label);
		panel.add(inputField);
		panel.add(btn1);
		panel.add(btn2);
		panel.add(btn3);
		panel.add(btn4);
		Random r= new Random();
		num=r.nextInt(100);

		//为按钮添加监听事件
		btn1.addActionListener(e->{
			String content=inputField.getText();
			int num1=Integer.parseInt(content);
			if(num1>num) {
				showArea.append("猜大了"+"\n");
			}else if(num1<num) {
				showArea.append("猜小了"+"\n");
			}else {
				showArea.append("恭喜你猜对了"+"\n");
			}
			inputField.setText("");
		});
		
		btn2.addActionListener(e->{
			showArea.append("答案是"+String.valueOf(num)+"\n");
		});	
		btn3.addActionListener(e->{
			showArea.append("重新开始新一轮猜词\n");
			num=r.nextInt(100);
		});
		
		btn4.addActionListener(e->{
			System.exit(0);
		});

		//向JFrame窗口的顶部和尾部分别加入面板组件JScrollPane和JPanel
		f.add(scrollPane,BorderLayout.PAGE_START);
		f.add(panel,BorderLayout.PAGE_END);
	}
	
	public static void main(String[] args) {
		SwingUtilities.invokeLater(Gui:: createAndShowGUI);
	}
}

//通讯录
package chapter4;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Scanner;

public class Gui{
	static Scanner sc =new Scanner(System.in);
	static ArrayList<Maillist> list=new ArrayList<Maillist>();
	public static void main(String[] args) {
		System.out.println("           ***欢迎使用通讯录系统***");
		while(true) {
			System.out.println("*添加记录请输入1*显示通讯录请输入2*存储到一个文件夹请输入3*");
			System.out.println("*查询请输入4*修改属性请输入5*排序请输入6*从文件中读取请输入7*");
			int a=sc.nextInt();
			switch (a) {
			case 1:
				new Gui().addto();      
				break;
			case 2:
				new Gui().putout();     
				break;
			case 3:
				try {
					new Gui().infile();
} catch (IOException e) {
					e.printStackTrace();
				}          break;
			case 4:
				System.out.println("请输入要查询的关键词:");
				new Gui().query(sc.next());
				break;
			case 5:
				System.out.println("请分别输入人名，想要修改的属性，修改后的值");
				new Gui().amend(sc.next(), sc.next(), sc.next());
				break;
			case 6:
				new Gui().sort();
				break;
			case 7:
				try {
					new Gui().outfile();
				} catch (IOException e) {
					e.printStackTrace();
				}
				break;
			}
		}
	}
	public void addto() {                                                         //添加记录
		System.out.println("请输入名字，地址，电话，邮编。（空请输入null）");
		Maillist a=new Maillist(sc.next(), sc.next(), sc.next(),sc.next());
		list.add(a);
		System.out.println("添加成功");
	}
	public void putout() {                                                         //显示通讯录
		System.out.println("名字"+"\t"+"地址"+"\t"+"电话号码"+"\t"+"    邮编"+"\t");
		for(Maillist a : list) {
			System.out.println(a.getname()+"    "+a.getadd()+"    "+a.getphone()+"    "+a.getzipc());
		}
	}
	public void infile() throws IOException {                                          //存到一个文件夹
		File out=new File("D:\\javarun\\通讯录.txt");
		PrintStream ps = new PrintStream(new FileOutputStream(out));
		ps.append("姓名"+"\t");
ps.append("地址  "+"\t");
		ps.append("电话号码 "+"\t");
		ps.append("邮编  "+"\t"+"\r\n");
		for(Maillist a:list) {
			ps.append(a.getname()+"  "+"\t");
			ps.append(a.getadd()+"  "+"\t");
			ps.append(a.getphone()+"  "+"\t");
			ps.append(a.getzipc()+"\t"+"\r\n");
		}
		ps.close();
		System.out.println("输入到文件夹成功");
	}
	public void amend(String a,String b,String c) {   //修改属性  形参a是姓名 形参b是要修改的属性名 形参c是修改后的值
		for(Maillist d:list) {
			if(d.getname().equals(a)&&b.equals("地址")) {
				d.setadd(c);
			}else if(d.getname().equals(a)&&b.equals("电话号码")) {
				d.setphone(c);
			}else if(d.getname().equals(a)&&b.equals("邮编")) {
				d.setzipc(c);
			}else ;
		}
		System.out.println("修改成功");
	}
	public void query(String a) {      //输入关键字查询
		for(Maillist b:list) {
			if(b.getname().equals(a)||b.getadd().equals(a)||b.getphone().equals(a)
			  ||b.getzipc().equals(a)) {
				System.out.println("查询结果："+"名字："+b.getname()+" 地址："+
			    b.getadd()+" 电话："+b.getphone()+" 邮编："+b.getzipc());
			}
		}
	}
	public void sort() {   //按照名字首字母排序并输出   
		ArrayList<String> str=new ArrayList<String>();    
		for(Maillist a:list) {
			str.add(a.getname());
		}
		str.sort(null);
		for(int i=0;i<str.size();i++) {
			for(Maillist a:list) {
				if(a.getname().equals(str.get(i))) {
					System.out.println(a.getname()+"    "+a.getadd()+"    "+a.getphone()+"
"+a.getzipc());
				}
			}
		}	
	}
	public void outfile() throws IOException {                          
 //从文件中读入信息并显示在控制台上
		FileReader fReader =new FileReader("D:\\javarun\\通讯录.txt");
		BufferedReader bf=new BufferedReader(fReader);
		String str;
		while((str=bf.readLine())!=null) {
			System.out.println(str);
		}
		bf.close();
	}
}

//***需建立两个类
package chapter4;
public class Maillist {
	private String name;
	private String address;
	private String Phonenum;
	private String zipcode;
	public Maillist(String a,String b,String c,String d) {
		this.name=a;
		this.address=b;
		this.Phonenum=c;
		this.zipcode=d;
	}
	public String getname() {
		return this.name;
	}
	public String getadd(){
		return this.address;
	}
	public String getphone() {
		return this.Phonenum;
	}
	public String getzipc() {
		return this.zipcode;
	}
	public void setadd(String a) {
		this.address=a;
	}
	public void setphone(String a) {
	this.Phonenum=a;
	}
	public void setzipc(String a) {
		this.zipcode=a;
	}
}
